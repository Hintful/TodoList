{"version":3,"sources":["contexts/ThemeContext.js","components/Credit.js","reducers/TodoReducer.js","contexts/TodoContext.js","components/Navbar.js","components/ThemeToggle.js","components/ThemeToggleText.js","components/TodoForm.js","components/TodoDetails.js","components/TodoList.js","components/Container.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","props","loadTheme","JSON","parse","localStorage","getItem","userTheme","isLightTheme","useState","light","text","ui","bg","dark","showToggleText","theme","setTheme","useEffect","setItem","stringify","Provider","value","children","Credit","useContext","style","textAlign","fontSize","paddingTop","color","className","TodoReducer","state","action","type","name","todo","note","id","uuidv4","filter","TodoContext","TodoContextProvider","useReducer","localData","todos","todoDispatch","Navbar","background","length","ThemeToggle","toggleThemeText","border","onClick","ReactGA","event","category","onMouseEnter","onMouseLeave","ThemeToggleText","show","display","TodoForm","setName","setNote","onSubmit","e","preventDefault","placeholder","onChange","target","required","TodoDetails","TodoList","map","Container","height","width","margin","App","window","GA_INIT","initialize","set","page","location","pathname","pageview","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ddc395d1.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n  const loadTheme = JSON.parse(localStorage.getItem('theme'));\r\n  const userTheme = loadTheme === null ? { isLightTheme: true } : loadTheme; // for first time visitors with no local data\r\n\r\n  const [theme, setTheme] = useState({\r\n    isLightTheme: userTheme.isLightTheme,\r\n    light: { text: '#555', ui: '#ddd', bg: '#eee' },\r\n    dark: { text: '#ddd', ui: '#333', bg: '#555' },\r\n    showToggleText: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', JSON.stringify(theme))\r\n  }, [theme]);\r\n\r\n  return (  \r\n    <ThemeContext.Provider value={{theme, setTheme}}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n \r\nexport default ThemeContextProvider;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst Credit = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n  return (  \r\n    <div style={{ textAlign: \"center\", fontSize: \"0.75em\", paddingTop: \"20px\", color: style.text }} className=\"credit\">\r\n      Coded and designed by <u>Kurt Choi</u>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Credit;","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const TodoReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'ADD_TODO':\r\n      return [...state, {\r\n        name: action.todo.name,\r\n        note: action.todo.note,\r\n        id: uuidv4()\r\n      }]\r\n    case 'REMOVE_TODO':\r\n      return state.filter(todo => (todo.id !== action.id))\r\n    default:\r\n      return state\r\n  }\r\n}","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { TodoReducer } from '../reducers/TodoReducer';\r\n\r\nexport const TodoContext = createContext();\r\n\r\nconst TodoContextProvider = (props) => {\r\n  const [todos, todoDispatch] = useReducer(TodoReducer, [], () => {\r\n    const localData = localStorage.getItem('todos');\r\n    return localData ? JSON.parse(localData) : []\r\n  })\r\n  // const addTodo = (name, note) => {\r\n  //   setTodos([...todos, {name, note, id: uuidv4()}])\r\n  // }\r\n  // const removeTodo = (id) => {\r\n  //   setTodos(todos.filter(todo => todo.id !== id))\r\n  // }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos]); // run whenever 'todos' change\r\n\r\n  return (  \r\n    <TodoContext.Provider value={{todos, todoDispatch}}>\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n \r\nexport default TodoContextProvider;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\n\r\nconst Navbar = () => {\r\n  const { todos } = useContext(TodoContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n  return (  \r\n    <div className=\"navbar\" style={{ background: style.ui, color: style.text }}>\r\n      <h1>To-do List</h1>\r\n      <p>{todos.length} tasks remaining</p>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Navbar;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport ReactGA from 'react-ga';\r\n\r\nconst ThemeToggle = () => {\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n\r\n  const toggleTheme = () => {\r\n    setTheme({...theme, isLightTheme: !theme.isLightTheme});\r\n    ReactGA.event({\r\n      category: 'TodoList',\r\n      action: 'Clicked Toggle Theme button'\r\n    });\r\n  }\r\n\r\n  const toggleThemeText = () => {\r\n    setTheme({...theme, showToggleText: !theme.showToggleText})\r\n  }\r\n\r\n  return (\r\n    <div style={{ background: style.bg, border: \"1px solid \" + style.text }} \r\n    onClick={toggleTheme} onMouseEnter={toggleThemeText} onMouseLeave={toggleThemeText} className=\"theme-toggle\"></div>\r\n  );\r\n}\r\n \r\nexport default ThemeToggle;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst ThemeToggleText = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n  const show = theme.showToggleText ? \"block\" : \"none\";\r\n\r\n  return (  \r\n    <div style={{ display: show, color: style.text }} className=\"theme-toggle-text\">\r\n      Change Theme\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default ThemeToggleText;","import React, { useContext, useState } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport ReactGA from 'react-ga';\r\n\r\nconst TodoForm = () => {\r\n  // contexts\r\n  const { todoDispatch } = useContext(TodoContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  // states\r\n  const [name, setName] = useState('');\r\n  const [note, setNote] = useState('');\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // prevent page from refreshing upon submit\r\n    ReactGA.event({\r\n      category: 'TodoList',\r\n      action: 'Added a task'\r\n    });\r\n    todoDispatch({type: 'ADD_TODO', todo: {name, note}})\r\n    // addTodo(name, note);\r\n    setName('');\r\n    setNote('');\r\n  }\r\n  return (  \r\n    <form style={{ background: style.ui, color: style.text }} onSubmit={handleSubmit}>\r\n      <input style={{ background: style.bg, color: style.text }} type=\"text\" placeholder=\"What's your task?\" value={name} \r\n      onChange={(e) => setName(e.target.value)} required />\r\n      <input style={{ background: style.bg, color: style.text }} type=\"text\" placeholder=\"Set note for the task\" value={note} \r\n      onChange={(e) => setNote(e.target.value)} />\r\n      <input style={{ background: style.text, color: style.ui }}type=\"submit\" value=\"Add Task\" />\r\n    </form>\r\n  );\r\n}\r\n \r\nexport default TodoForm;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport ReactGA from 'react-ga';\r\n\r\nconst TodoDetails = ({ todo }) => {\r\n  const { todoDispatch } = useContext(TodoContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n\r\n  return (  \r\n    <li style={{ background: style.bg }} onClick={() => {\r\n      todoDispatch({type:'REMOVE_TODO', id: todo.id});\r\n      ReactGA.event({\r\n        category: 'TodoList',\r\n        action: 'Finished a task'\r\n      });\r\n    }}>\r\n      <div style={{ color: style.text }} className=\"name\">{todo.name}</div>\r\n      <div style={{ color: style.text }} className=\"note\">{todo.note}</div>\r\n    </li>\r\n  );\r\n}\r\n \r\nexport default TodoDetails;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport TodoDetails from './TodoDetails';\r\n\r\nconst TodoList = () => {\r\n  const { todos } = useContext(TodoContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n\r\n  return todos.length ? (  \r\n    // tasks exist\r\n    <div style={{ background: style.ui }} className=\"todo-list\">\r\n      <ul>\r\n        {todos.map(todo => {\r\n          return (\r\n            <TodoDetails todo={todo} key={todo.id} />\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    // no tasks\r\n    <div style={{ background: style.ui, color: style.text }} className=\"empty\">No more tasks for today!</div>\r\n  );\r\n}\r\n \r\nexport default TodoList;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport Credit from './Credit';\r\nimport Navbar from './Navbar';\r\nimport ThemeToggle from './ThemeToggle';\r\nimport ThemeToggleText from './ThemeToggleText';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\n\r\nconst Container = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n\r\n  return (  \r\n    <div className=\"main\" style={{ background: style.ui, height: \"100vh\", width: \"100vw\"}}>\r\n      <div className=\"todo-container\" style={{ width: \"50%\", margin: \"auto\" }}>\r\n        <Navbar />\r\n        <hr style= {{ background: style.text }} />\r\n        <TodoList />\r\n        <hr style= {{ background: style.text }} />\r\n        <TodoForm />\r\n        <ThemeToggle/>\r\n        <ThemeToggleText />\r\n        <Credit />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Container;","import { useEffect } from \"react\";\nimport Container from \"./components/Container\";\nimport ThemeContextProvider from \"./contexts/ThemeContext\";\nimport TodoContextProvider from \"./contexts/TodoContext\";\nimport ReactGA from 'react-ga';\n\nfunction usePageViews() {\n  useEffect(() => {\n    if(!window.GA_INIT) {\n      ReactGA.initialize(\"UA-186165133-1\");\n      window.GA_INIT = true;\n    }\n    ReactGA.set({ page: window.location.pathname });\n    ReactGA.pageview(window.location.pathname);\n  }, []);\n}\n\nfunction App() {\n  usePageViews();\n\n  return (\n    <div className=\"App\">\n      <ThemeContextProvider>\n        <TodoContextProvider>\n          <Container />\n        </TodoContextProvider>\n      </ThemeContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}