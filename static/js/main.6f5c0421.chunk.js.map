{"version":3,"sources":["contexts/ThemeContext.js","reducers/TodoReducer.js","contexts/TodoContext.js","components/Navbar.js","components/ThemeToggle.js","components/ThemeToggleText.js","components/TodoForm.js","components/TodoDetails.js","components/TodoList.js","components/Container.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","props","userTheme","JSON","parse","localStorage","getItem","useState","isLightTheme","light","text","ui","bg","dark","showToggleText","theme","setTheme","useEffect","setItem","stringify","Provider","value","children","TodoReducer","state","action","type","name","todo","note","id","uuidv4","filter","TodoContext","TodoContextProvider","useReducer","localData","todos","todoDispatch","Navbar","useContext","style","className","background","color","length","ThemeToggle","toggleThemeText","border","onClick","onMouseEnter","onMouseLeave","ThemeToggleText","show","display","TodoForm","setName","setNote","onSubmit","e","preventDefault","placeholder","onChange","target","required","TodoDetails","TodoList","map","Container","height","width","margin","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f5c0421.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = (props) => {\r\n  const userTheme = JSON.parse(localStorage.getItem('theme'));\r\n\r\n  const [theme, setTheme] = useState({\r\n    isLightTheme: userTheme.isLightTheme,\r\n    light: { text: '#555', ui: '#ddd', bg: '#eee' },\r\n    dark: { text: '#ddd', ui: '#333', bg: '#555' },\r\n    showToggleText: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('theme', JSON.stringify(theme))\r\n  }, [theme]);\r\n\r\n  return (  \r\n    <ThemeContext.Provider value={{theme, setTheme}}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n \r\nexport default ThemeContextProvider;","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const TodoReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'ADD_TODO':\r\n      return [...state, {\r\n        name: action.todo.name,\r\n        note: action.todo.note,\r\n        id: uuidv4()\r\n      }]\r\n    case 'REMOVE_TODO':\r\n      return state.filter(todo => (todo.id !== action.id))\r\n    default:\r\n      return state\r\n  }\r\n}","import React, { createContext, useReducer, useEffect } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { TodoReducer } from '../reducers/TodoReducer';\r\n\r\nexport const TodoContext = createContext();\r\n\r\nconst TodoContextProvider = (props) => {\r\n  const [todos, todoDispatch] = useReducer(TodoReducer, [], () => {\r\n    const localData = localStorage.getItem('todos');\r\n    return localData ? JSON.parse(localData) : []\r\n  })\r\n  // const addTodo = (name, note) => {\r\n  //   setTodos([...todos, {name, note, id: uuidv4()}])\r\n  // }\r\n  // const removeTodo = (id) => {\r\n  //   setTodos(todos.filter(todo => todo.id !== id))\r\n  // }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n  }, [todos]); // run whenever 'todos' change\r\n\r\n  return (  \r\n    <TodoContext.Provider value={{todos, todoDispatch}}>\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n}\r\n \r\nexport default TodoContextProvider;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\n\r\nconst Navbar = () => {\r\n  const { todos } = useContext(TodoContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n  return (  \r\n    <div className=\"navbar\" style={{ background: style.ui, color: style.text }}>\r\n      <h1>To-do List</h1>\r\n      <p>{todos.length} tasks remaining</p>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Navbar;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst ThemeToggle = () => {\r\n  const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n\r\n  const toggleTheme = () => {\r\n    setTheme({...theme, isLightTheme: !theme.isLightTheme})\r\n  }\r\n\r\n  const toggleThemeText = () => {\r\n    setTheme({...theme, showToggleText: !theme.showToggleText})\r\n  }\r\n\r\n  return (\r\n    <div style={{ background: style.bg, border: \"1px solid \" + style.text }} \r\n    onClick={toggleTheme} onMouseEnter={toggleThemeText} onMouseLeave={toggleThemeText} className=\"theme-toggle\"></div>\r\n  );\r\n}\r\n \r\nexport default ThemeToggle;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\n\r\nconst ThemeToggleText = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n  const show = theme.showToggleText ? \"block\" : \"none\";\r\n\r\n  return (  \r\n    <div style={{ display: show, color: style.text }} className=\"theme-toggle-text\">\r\n      Change Theme\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default ThemeToggleText;","import React, { useContext, useState } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\n\r\nconst TodoForm = () => {\r\n  // contexts\r\n  const { todoDispatch } = useContext(TodoContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  // states\r\n  const [name, setName] = useState('');\r\n  const [note, setNote] = useState('');\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // prevent page from refreshing upon submit\r\n    todoDispatch({type: 'ADD_TODO', todo: {name, note}})\r\n    // addTodo(name, note);\r\n    setName('');\r\n    setNote('');\r\n  }\r\n  return (  \r\n    <form style={{ background: style.ui, color: style.text }} onSubmit={handleSubmit}>\r\n      <input style={{ background: style.bg, color: style.text }} type=\"text\" placeholder=\"What's your task?\" value={name} \r\n      onChange={(e) => setName(e.target.value)} required />\r\n      <input style={{ background: style.bg, color: style.text }} type=\"text\" placeholder=\"Set note for the task\" value={note} \r\n      onChange={(e) => setNote(e.target.value)} />\r\n      <input style={{ background: style.text, color: style.ui }}type=\"submit\" value=\"Add Task\" />\r\n    </form>\r\n  );\r\n}\r\n \r\nexport default TodoForm;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\n\r\nconst TodoDetails = ({ todo }) => {\r\n  const { todoDispatch } = useContext(TodoContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n\r\n  return (  \r\n    <li style={{ background: style.bg }} onClick={() => todoDispatch({type:'REMOVE_TODO', id: todo.id})}>\r\n      <div style={{ color: style.text }} className=\"name\">{todo.name}</div>\r\n      <div style={{ color: style.text }} className=\"note\">{todo.note}</div>\r\n    </li>\r\n  );\r\n}\r\n \r\nexport default TodoDetails;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport { TodoContext } from '../contexts/TodoContext';\r\nimport TodoDetails from './TodoDetails';\r\n\r\nconst TodoList = () => {\r\n  const { todos } = useContext(TodoContext);\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n\r\n  return todos.length ? (  \r\n    // tasks exist\r\n    <div style={{ background: style.ui }} className=\"todo-list\">\r\n      <ul>\r\n        {todos.map(todo => {\r\n          return (\r\n            <TodoDetails todo={todo} key={todo.id} />\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    // no tasks\r\n    <div style={{ background: style.ui, color: style.text }} className=\"empty\">No more tasks for today!</div>\r\n  );\r\n}\r\n \r\nexport default TodoList;","import React, { useContext } from 'react';\r\nimport { ThemeContext } from '../contexts/ThemeContext';\r\nimport Navbar from './Navbar';\r\nimport ThemeToggle from './ThemeToggle';\r\nimport ThemeToggleText from './ThemeToggleText';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\n\r\nconst Container = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  const style = theme.isLightTheme ? theme.light : theme.dark;\r\n\r\n  return (  \r\n    <div className=\"main\" style={{ background: style.ui, height: \"100vh\", width: \"100vw\"}}>\r\n      <div className=\"todo-container\" style={{ width: \"50%\", margin: \"auto\" }}>\r\n        <Navbar />\r\n        <hr style= {{ background: style.text }} />\r\n        <TodoList />\r\n        <hr style= {{ background: style.text }} />\r\n        <TodoForm />\r\n        <ThemeToggle/>\r\n        <ThemeToggleText />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Container;","import Container from \"./components/Container\";\nimport Navbar from \"./components/Navbar\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport ThemeContextProvider from \"./contexts/ThemeContext\";\nimport TodoContextProvider from \"./contexts/TodoContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeContextProvider>\n        <TodoContextProvider>\n          <Container />\n        </TodoContextProvider>\n      </ThemeContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}